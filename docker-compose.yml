## Aim: dcm4chee PACS, OHIF viewer, secured with keycloak, behind reverse proxy, with wildcard SSL certificates from Letsencrypt
## intended for use in local network, without external access
##
## Resources:
## - DCM4CHEE: https://github.com/dcm4che/dcm4chee-arc-light/wiki/Running-on-Docker
## - OHIF: https://docs.ohif.org/
## - TRAEFIK: https://doc.traefik.io/traefik/user-guides/docker-compose/basic-example/   https://doc.traefik.io/traefik/https/acme/#dnschallenge
## - Weasis integration: https://weasis.org/en/basics/customize/integration/#dcm4chee-arc-light
##
## Steps before starting:
## - ensure local DNS points chosen domain (plus *, or chosen subdomains) to docker server, set DOCKER_HOSTNAME in .env
## - ensure you have access to DNS provider for domain name and traefik can communicate for DNS-01 challenge, generate API tokens
## - rename .env.development to .env, set variables
## - customise app-config.js - set <pacs.docker_host>, <auth.docker_host> and <viewer.docker_host> to your chosen address for each service (eg pacs.example.com) 
## - run docker compose up ldap and wait until ldap initialisation finished, then Ctrl-C
## - run docker compose up -d
## - log in to keycloak (https://<keycloak_subdomain.docker_host>/admin/dcm4che/console), remove port numbers in dcm4chee-rs and dcm4chee-ui client URLS
## - In keycloak admin, create ohif-viewer client (can import ohif-viewer.json after customising URLs)
## - Log out, then log in to dcm4chee (https://<arc_subdomain.docker_host>/dcm4chee-arc/ui2), check that initial view loads successfully
## - finally trial logging in to OHIF (https//<ohif_subdomain.docker_host>) 

version: "3"

networks:
  pacs_network:
    name: pacs_network
    driver: bridge

services:

  traefik:
    image: traefik:${TRAEFIK_LABEL}
    restart: unless-stopped
    networks:
      - pacs_network
    ports:
      - 80:80
      - 443:443
    command:
      - --log.level=${TRAEFIK_LOG_LEVEL}
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --providers.docker.network=pacs_network
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --entrypoints.websecure.http.tls=true
      - --entrypoints.web.http.redirections.entrypoint.to=websecure
      - --entrypoints.web.http.redirections.entrypoint.scheme=https
      - --entrypoints.web.http.redirections.entrypoint.permanent=true
      - --entryPoints.web.forwardedHeaders.trustedIPs=127.0.0.1/32,10.0.0.0/8,172.16.0.0/12,192.168.0.0/16  # unsure if necessary for passing headers to Keycloak
      - --api
      - --certificatesresolvers.letsencrypt.acme.email=${DNS_PROVIDER_EMAIL}
      - --certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json
      - --certificatesresolvers.letsencrypt.acme.dnschallenge=true
      - --certificatesresolvers.letsencrypt.acme.dnschallenge.provider=${DNS_PROVIDER_NAME}
      - --certificatesresolvers.letsencrypt.acme.dnschallenge.delaybeforecheck=0
      - --certificatesresolvers.letsencrypt.acme.dnschallenge.resolvers=1.1.1.1:53,8.8.8.8:53
      # !IMPORTANT - COMMENT OUT THE FOLLOWING LINE IN PRODUCTION!
      - --certificatesresolvers.letsencrypt.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory
    labels:
      - traefik.enable=${TRAEFIK_ENABLE_DASHBOARD}
      - traefik.http.routers.traefik-dashboard.entrypoints=websecure
      - traefik.http.routers.traefik-dashboard.rule=Host(`${TRAEFIK_SUBDOMAIN}.${DOCKER_HOSTNAME}`)
      - traefik.http.routers.traefik-dashboard.tls=true
      - traefik.http.routers.traefik-dashboard.tls.certresolver=letsencrypt
      - traefik.http.routers.traefik-dashboard.tls.domains[0].main=${DOCKER_HOSTNAME}
      - traefik.http.routers.traefik-dashboard.tls.domains[0].sans=*.${DOCKER_HOSTNAME}
      - traefik.http.routers.traefik-dashboard.service=api@internal
      - traefik.http.routers.traefik-dashboard.middlewares=traefik-auth
      - traefik.http.middlewares.traefik-auth.basicauth.users=${TRAEFIK_DASHBOARD_USER}:${TRAEFIK_DASHBOARD_PASSWORD_HASH}
    environment:
      # your API key variable name here eg DREAMHOST_API_KEY: ${DREAMHOST_API_KEY}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./data/traefik/letsencrypt:/letsencrypt

  ldap:
    image: dcm4che/slapd-dcm4chee:${SLAPD_DCM4CHEE_LABEL}
    logging:
      driver: json-file
      options:
        max-size: "10m"
    # ports: # not necessary to expose these ports
      # - "389:389"
      # - "636:636"
    environment:
      STORAGE_DIR: /storage/fs1
      IID_PATIENT_URL: ${LDAP_IID_PATIENT_URL}
      IID_STUDY_URL: ${LDAP_IID_STUDY_URL}
      IID_URL_TARGET: ${LDAP_IID_URL_TARGET}
    volumes:
      - ./data/dcm4chee-arc/ldap:/var/lib/openldap/openldap-data
      - ./data/dcm4chee-arc/slapd.d:/etc/openldap/slapd.d
    restart: unless-stopped
    networks:
      - pacs_network

  db:
    image: dcm4che/postgres-dcm4chee:${POSTGRES_DCM4CHEE_LABEL}
    logging:
      driver: json-file
      options:
        max-size: "10m"
    # ports: # not necessary to expose this port
      # - "5432:5432"
    environment:
      POSTGRES_DB: pacsdb
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
      - ./data/dcm4chee-arc/db:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - pacs_network

  mariadb:
    image: mariadb:${MARIADB_LABEL}
    logging:
      driver: json-file
      options:
        max-size: "10m"
    # ports:  # not necessary to expose this port
      # - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: keycloak
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
      - ./data/dcm4chee-arc/mysql:/var/lib/mysql
    networks:
      - pacs_network

  keycloak:
    image: dcm4che/keycloak:${KEYCLOAK_LABEL}
    logging:
      driver: json-file
      options:
        max-size: "10m"
    # ports:  # not necessary to expose this port
      # - "8843:8843"
    labels:
      - traefik.enable=true
      - traefik.http.routers.keycloak.rule=Host(`${KEYCLOAK_SUBDOMAIN}.${DOCKER_HOSTNAME}`)
      - traefik.http.routers.keycloak.entrypoints=websecure
      - traefik.http.routers.keycloak.tls=true
      - traefik.http.routers.keycloak.tls.certresolver=letsencrypt
      - traefik.http.routers.keycloak.tls.domains[0].main=${DOCKER_HOSTNAME}
      - traefik.http.routers.keycloak.tls.domains[0].sans=*.${DOCKER_HOSTNAME}
      - traefik.http.services.keycloak.loadbalancer.server.port=8080
    environment:
      KC_HTTPS_PORT: 8843  # internal port
      # KC_HOSTNAME: <keycloak-subdomain.example.com>  # do not set if keycloak is behind reverse proxy
      KC_HOSTNAME_URL: https://${KEYCLOAK_SUBDOMAIN}.${DOCKER_HOSTNAME}  # requires this setting instead of KC_HOSTNAME when behind proxy
      KC_HOSTNAME_ADMIN_URL: https://${KEYCLOAK_SUBDOMAIN}.${DOCKER_HOSTNAME} # requires this setting instead of KC_HOSTNAME when behind proxy
      KC_HOSTNAME_PORT: 443  # port used by reverse proxy, ie 443
      KC_HTTP_ENABLED: true  # trusted internal network, KC_PROXY set to edge. If passthrough, keycloak needs own certificate and disable HTTP
      KC_HTTP_PORT: 8080  # internal port
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
      KC_PROXY: edge  # documentation says use passthrough, but I prefer to terminate SSL at traefik and use http here
      KC_DB: mariadb
      KC_DB_URL_DATABASE: keycloak
      KC_DB_URL_HOST: mariadb
      KC_DB_USERNAME: ${KC_DB_USERNAME}
      KC_DB_PASSWORD: ${KC_DB_PASSWORD}
      KC_LOG: file
      ARCHIVE_HOST: ${ARC_SUBDOMAIN}.${DOCKER_HOSTNAME}
      # have to adjust these ports after the first boot in keycloak client (delete port information from URLS as reverse proxy is handling archive directly)
      ARCHIVE_HTTP_PORT: 80 # but need to remove this from dcm4chee-ui and dcm4chee-rs clients in keycloak after first boot
      ARCHIVE_HTTPS_PORT: 443 # but need to remove this from dcm4chee-ui and dcm4chee-rs clients in keycloak after first boot
      # ARCHIVE_MANAGEMENT_HTTPS_PORT: # currently not using reverse proxy for the wildfly admin console
      KEYCLOAK_WAIT_FOR: ldap:389 mariadb:3306
    depends_on:
      - ldap
      - mariadb
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
      - ./data/dcm4chee-arc/keycloak:/opt/keycloak/data
    networks:
      - pacs_network

  arc:
    image: dcm4che/dcm4chee-arc-psql:${DCM4CHEE_ARC_PSQL_LABEL}
    logging:
      driver: json-file
      options:
        max-size: "10m"
    ports:
      - "8080:8080"  # required, even though behind reverse proxy
      - "8443:8443"  # required, even though behind reverse proxy
      - "9990:9990"
      - "9993:9993"
      - "11112:11112"
      - "2762:2762"
      - "2575:2575"
      - "12575:12575"
    labels:
      - traefik.enable=true
      - traefik.http.routers.arc.rule=Host(`${ARC_SUBDOMAIN}.${DOCKER_HOSTNAME}`)
      - traefik.http.routers.arc.entrypoints=websecure
      - traefik.http.routers.arc.tls=true
      - traefik.http.routers.arc.tls.certresolver=letsencrypt
      - traefik.http.routers.arc.tls.domains[0].main=${DOCKER_HOSTNAME}
      - traefik.http.routers.arc.tls.domains[0].sans=*.${DOCKER_HOSTNAME}
      - traefik.http.services.arc.loadbalancer.server.port=8080
    environment:
      POSTGRES_DB: pacsdb
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      AUTH_SERVER_URL: https://keycloak:8843
      UI_AUTH_SERVER_URL: https://${KEYCLOAK_SUBDOMAIN}.${DOCKER_HOSTNAME}  # removed :8843 as now behind proxy
      WILDFLY_CHOWN: /storage
      WILDFLY_WAIT_FOR: ldap:389 db:5432 keycloak:8843
    depends_on:
      - ldap
      - db
      - keycloak
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
      - ./data/dcm4chee-arc/wildfly:/opt/wildfly/standalone
      - ${DICOM_STORAGE_DIR}:/storage
    restart: unless-stopped
    networks:
      - pacs_network

  ohif:
    image: ohif/app:${OHIF_LABEL}
    # ports:
      # - "3000:80"  # not necessary to expose these ports
    labels:
      - traefik.enable=true
      - traefik.http.routers.ohif.rule=Host(`${OHIF_SUBDOMAIN}.${DOCKER_HOSTNAME}`)
      - traefik.http.routers.ohif.entrypoints=websecure
      - traefik.http.routers.ohif.tls=true
      - traefik.http.routers.ohif.tls.certresolver=letsencrypt
      - traefik.http.routers.ohif.tls.domains[0].main=${DOCKER_HOSTNAME}
      - traefik.http.routers.ohif.tls.domains[0].sans=*.${DOCKER_HOSTNAME}
      - traefik.http.services.ohif.loadbalancer.server.port=80
    volumes:
      - ./config/app-config.js:/usr/share/nginx/html/app-config.js
    restart: unless-stopped
    networks:
      - pacs_network